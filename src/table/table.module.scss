
.table {
  /* default "auto"-size for all columns */
  --grid-col-size: minmax(50px, 1fr);

  --grid-row-highlight-bgc: #000000aa;
  --grid-row-selected-bgc: #3d90ce;
  --grid-row-selected-color: white;
  --grid-header-bgc: rgba(0, 0, 0, .75);
  --grid-thead-bgc: rgba(255, 255, 255, .9);
  --grid-spacing: 8px;
  --grid-resizer-width: 20px;
  --grid-resizing-color: rgba(255, 255, 255, .50);

  position: relative;
  display: grid;
  grid-template-columns: var(--grid-cols);
  flex: 1;
  height: var(--grid-height);
  width: 100%;
  align-content: start;
  justify-items: stretch;
  overflow: auto;
  overflow: overlay;
}

/* max possible scroll-height calculated by rows virtualizer */
.table::before {
  height: var(--grid-virtual-max-height);
  position: absolute;
  width: 1px;
  left: 0;
  top: 0;
  content: "";
}

.header {
  width: inherit;
  height: min-content;
  grid-column: 1 / -1; /* merge contents for all columns within a row */
  text-align: center;
  background: var(--grid-header-bgc);
  z-index: 1;
}

.row:not(.header) {
  /* display: contents; // ignore element in the DOM layout and use it's children in parent css-grid */
  grid-column: 1 / -1; /* merge all columns for parent's table grid */
  display: grid; /* ignore element as direct css-grid child */
  grid-template-columns: inherit;
  transition: background-color ease-in-out .35s;
  align-items: center;
  gap: inherit;

  &:not(.thead):hover {
    background: var(--grid-row-highlight-bgc);
  }
}

.column {
  padding: var(--grid-spacing);

  .title {
    overflow: hidden;
    text-overflow: ellipsis;
    flex: 1 0;
  }
}

.thead {
  position: sticky;
  top: 0; /* offset from top when parent element is scrolled */
  z-index: 1;
  color: #000;
  height: min-content;
  align-items: center;
  background: var(--grid-thead-bgc);

  > .column {
    position: relative;
    display: flex;
    user-select: none;
    overflow: visible;
    transition: opacity ease-out 250ms;

    &:not(.draggable) {
      /* re-ordering column (d&d) is disabled */
      cursor: default;
    }

    &:hover {
      .resizable {
        display: block;
      }
    }
  }

  &:empty {
    display: none !important;
  }
}

.sortable {
  cursor: pointer;
  transition: background-color .5s ease-out;
}

.arrowUp {
  margin: auto 3px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 0 5px 8.7px 5px;
  border-color: transparent transparent currentColor transparent;
}

.arrowDown {
  margin: auto 3px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 8.7px 5px 0 5px;
  border-color: currentColor transparent transparent transparent;
}

.resizable {
  position: absolute;
  top: 0;
  right: 0;
  width: var(--grid-resizer-width);
  height: var(--grid-virtual-max-height, 100%);
  background: linear-gradient(180deg, var(--grid-resizing-color), black) 50% repeat-y;
  background-size: 1px;
  transition: background-color .15s;
  cursor: col-resize;
  z-index: 10;
  display: none;
}

.isDragging {
  pointer-events: none;
}

.isDroppable {
  opacity: .5;
}

.isDropReady {
  opacity: 1;
}

.selectable {
  cursor: pointer;
}

.selectedRow {
  color: var(--grid-row-selected-color);
  background-color: var(--grid-row-selected-bgc);
}
